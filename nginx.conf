upstream backend {
    server backend:8000; # 'backend' seria o nome do serviço backend no Docker Compose se usasse Docker Compose, em Docker simples, pode ser localhost:8000 se backend e nginx forem no mesmo container
}

server {
    listen 80;
    server_name _; # Escuta em qualquer nome de domínio

    # Configuração para o frontend
    location / {
        root /app/frontend/dist;  # Diretório com os arquivos estáticos do frontend (build)
        index index.html;
        try_files $uri $uri/ /index.html;  # Para Single Page Applications
    }

    # Configuração para o backend
    location /api/ {
        proxy_pass http://localhost:8000;  # Encaminha para o backend FastAPI
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configurações importantes para CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Tratamento especial para requisições OPTIONS (preflight)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}